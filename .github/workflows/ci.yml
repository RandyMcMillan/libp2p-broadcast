on: [push, pull_request]

name: libp2p-broadcast

jobs:
  ci:
    strategy:
      fail-fast: false
      matrix:
        toolchain:
        - rust: stable
        platform:
        - target: x86_64-unknown-linux-gnu
          host: ubuntu-latest
          cross: false

        - target: x86_64-apple-darwin
          host: macos-latest
          cross: false

        - target: x86_64-pc-windows-msvc
          host: windows-latest
          cross: false

        #- target: armv7-linux-androideabi
        #  host: ubuntu-latest
        #  cross: true
          
        - target: aarch64-linux-android
          host: ubuntu-latest
          cross: true

        - target: aarch64-apple-ios
          host: macos-latest
          cross: true

        #- target: wasm32-unknown-unknown
        #  host: ubuntu-latest
        #  cross: true
          
    env:
      RUST_BACKTRACE: 1
      CARGO_INCREMENTAL: 0
      LLVM_CONFIG_PATH: /usr/local/opt/llvm/bin/llvm-config
      NDK_HOME: /usr/local/lib/android/sdk/ndk-bundle
      RUSTFLAGS: '--cfg getrandom_backend="wasm_js"'
      
    runs-on: ${{ matrix.platform.host }}
    steps:
    - name: Checkout sources
      uses: actions/checkout@v2

    - name: Cache cargo folder
      uses: actions/cache@v3
      with:
        path: ~/.cargo
        key: ${{ matrix.platform.target }}-cargo-${{ matrix.toolchain.rust }}

    - name: Install dependencies ubuntu
      if: matrix.platform.host == 'ubuntu-latest'
      run: sudo apt-get install llvm-dev

    - name: Install dependencies macos
      if: matrix.platform.host == 'macos-latest'
      run: brew install llvm

    - name: Install dependencies windows
      if: matrix.platform.host == 'windows-latest'
      run: choco install llvm

    - name: Install rust toolchain
      uses: hecrj/setup-rust-action@v2
      with:
        rust-version: ${{ matrix.toolchain.rust }}
        targets: ${{ matrix.platform.target }}


    #- name: Set up JDK 11
    #  uses: actions/setup-java@v3
    #  with:
    #    java-version: '11'
    #    distribution: 'temurin'
    #    cache: 'gradle'

    - name: Install Android SDK Platform 30
      if: contains(matrix.platform.target, 'android')
      run: |
        echo "y" | sudo /usr/local/lib/android/sdk/cmdline-tools/latest/bin/sdkmanager --install "platforms;android-30" "build-tools;30.0.3" "ndk;25.1.8937393";
        cargo install cargo-apk

    - name: Build
      if: contains(matrix.platform.target, 'android') == false
      run: cargo build --all --target ${{ matrix.platform.target }}

    - name: Build android
      if: contains(matrix.platform.target, 'android')
      run: cargo apk --help; cargo apk check; cargo apk build --target ${{ matrix.platform.target }}

    - name: Rust tests
      if: matrix.platform.cross == false
      run: cargo test --all

  lint-rust:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout sources
      uses: actions/checkout@v2

    - name: Cache cargo folder
      uses: actions/cache@v3
      with:
        path: ~/.cargo
        key: lint-cargo

    - name: Install rust toolchain
      uses: hecrj/setup-rust-action@v2
      with:
        rust-version: stable
        components: clippy, rustfmt

    - name: cargo fmt
      run: cargo fmt --all -- --check | 2>/dev/null

    - name: cargo clippy
      run: cargo clippy --workspace --examples --tests -- -D warnings
